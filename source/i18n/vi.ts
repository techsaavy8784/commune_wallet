const vi = {
  accounts: {
    paraText: 'Ch√¨a kh√≥a c·ªßa b·∫°n cho m·ªôt Internet m·ªõi',
    createAccount: 'T·∫°o m·ªôt t√†i kho·∫£n',
    importSeed: 'c·ª•m t·ª´ h·∫°t gi·ªëng nh·∫≠p kh·∫©u',
    or: 'ho·∫∑c',
    selectAccount: 'Ch·ªçn t√†i kho·∫£n',
  },
  nftMarketplace: {
    header: 'üíé Kh√°m ph√° NFT',
  },
  nftCollection: {
    listings: 'danh s√°ch',
    collectionSize: 'K√≠ch th∆∞·ªõc b·ªô s∆∞u t·∫≠p',
    sales: 'Vi·ªác b√°n h√†ng',
    volume: '√Çm l∆∞·ª£ng',
    floor: 'S√†n nh√†',
  },
  nftBuyDetails: {
    buy: 'Mua',
    forSale: 'Rao b√°n',
  },
  nftPurchaseDetails: {
    congratsTxt: 'Ch√∫c m·ª´ng NFT m·ªõi c·ªßa b·∫°n! üéâ',
  },
  nftSettle: {
    cta: 'Mua NFT',
    free: 'Mi·ªÖn ph√≠',
    netFee: 'Ph√≠ m·∫°ng',
    marketFee: 'Ph√≠ th·ªã tr∆∞·ªùng',
    headerLoading: 'mua..',
    total: 'T·ªïng c·ªông',
    header: 'x√°c nh·∫≠n mua',
  },
  createAccount: {
    header: 'T·∫°o m·ªôt t√†i kho·∫£n',
    accountName: 'T√™n t√†i kho·∫£n',
    mnemonicLabel: 'H·∫°t gi·ªëng ghi nh·ªõ',
    copy: 'SAO CH√âP',
    download: 'T·∫¢I XU·ªêNG',
    generated: 'ƒê√¢y l√† m·ªôt h·∫°t gi·ªëng ghi nh·ªõ 12 t·ª´ ƒë∆∞·ª£c t·∫°o.',
    saved: 'T√¥i ƒë√£ l∆∞u h·∫°t gi·ªëng ghi nh·ªõ c·ªßa m√¨nh m·ªôt c√°ch an to√†n.',
    nextStep: 'B∆∞·ªõc ti·∫øp theo',
    checkBox:
      'T√¥i hi·ªÉu r·∫±ng t√¥i s·∫Ω m·∫•t quy·ªÅn truy c·∫≠p v√†o t√†i kho·∫£n n·∫øu t√¥i ƒë√°nh m·∫•t c·ª•m t·ª´ ghi nh·ªõ n√†y.',
    cta: 'T·∫°o m·ªôt t√†i kho·∫£n',
  },
  export: {
    header: 'Xu·∫•t t√†i kho·∫£n',
    checkTitle:
      'T√¥i hi·ªÉu r·∫±ng t√¥i c√≥ th·ªÉ m·∫•t quy·ªÅn truy c·∫≠p v√†o t√†i s·∫£n k·ªπ thu·∫≠t s·ªë n·∫øu t√¥i ti·∫øt l·ªô kh√≥a ri√™ng t∆∞ c·ªßa m√¨nh.',
    secretMnemonicLabel: 'b√≠ m·∫≠t ghi nh·ªõ',
    copy: 'SAO CH√âP',
    download: 'T·∫¢I XU·ªêNG',
    never:
      'ƒê·ª´ng bao gi·ªù ti·∫øt l·ªô b√≠ m·∫≠t n√†y. B·∫•t k·ª≥ ai c√≥ c·ª•m t·ª´ n√†y ƒë·ªÅu c√≥ th·ªÉ ƒë√°nh c·∫Øp b·∫•t k·ª≥ t√†i s·∫£n n√†o trong t√†i kho·∫£n c·ªßa b·∫°n.',
    confirm: 'X√°c nh·∫≠n',
    done: 'Xong',
  },
  importSeed: {
    header: 't√†i kho·∫£n nh·∫≠p kh·∫©u',
    addAccount: 'Th√™m t√†i kho·∫£n',
    migrationComplete:
      'Qu√° tr√¨nh di chuy·ªÉn ƒë√£ ho√†n t·∫•t. Ti·∫øp t·ª•c v·ªõi t√†i kho·∫£n nh·∫≠p',
    skip: 'Nh·∫£y',
    next: 'K·∫ø ti·∫øp',
    label: 'Nh·∫≠p c·ª•m t·ª´ Mnemonic Seed c·ªßa b·∫°n',
    migrateTitle: 'Di chuy·ªÉn t√†i kho·∫£n ICP c·ªßa b·∫°n',
  },
  wallet: {
    receive: 'Nh·∫≠n ƒë∆∞·ª£c',
    send: 'G·ª≠i',
    noEd: 'ƒê·ªãa ch·ªâ Ed25519 kh√¥ng c√≤n ƒë∆∞·ª£c h·ªó tr·ª£. Vui l√≤ng nh·∫≠p h·∫°t gi·ªëng t·ª´ Export',
    export: 'Xu·∫•t kh·∫©u',
    txns: 'giao d·ªãch',
  },
  transactions: {
    header: 'giao d·ªãch',
    noTxns: 'Kh√¥ng c√≥ giao d·ªãch',
  },
  transactionDetails: {
    header: 'Chi ti·∫øt',
    pleaseCheck: 'Vui l√≤ng ki·ªÉm tra Id giao d·ªãch',
    from: 'T·ª´',
    to: 'ƒê·∫æN',
    transaction: 'Giao d·ªãch',
    amount: 'S·ªë l∆∞·ª£ng',
    value: 'Gi√° tr·ªã',
    txnFees: 'Ph√≠ giao d·ªãch',
    total: 'T·ªïng c·ªông',
    activityLog: 'Ho·∫°t ƒë·ªông ƒëƒÉng nh·∫≠p',
    txnNarrate: 'Giao d·ªãch ƒë∆∞·ª£c t·∫°o v·ªõi gi√° tr·ªã l√†',
  },
  transactionConfirm: {
    networkFee: 'Ph√≠ m·∫°ng',
    dexFee: 'Ph√≠ DEX',
    free: 'Mi·ªÖn ph√≠',
    total: 'T·ªïng c·ªông',
  },
  walletAddressBook: {
    addRecp: 'Th√™m ng∆∞·ªùi nh·∫≠n',
    myAccounts: 'T√†i kho·∫£n c·ªßa t√¥i',
    recents: 'G·∫ßn ƒë√¢y',
    noRecent: 'Kh√¥ng c√≥ ƒë·ªãa ch·ªâ g·ª≠i g·∫ßn ƒë√¢y',
    lastSent: 'G·ª≠i l·∫ßn cu·ªëi v√†o ng√†y',
    noPers: 'Kh√¥ng c√≥ t√†i kho·∫£n c√° nh√¢n n√†o kh√°c ƒë·ªÉ g·ª≠i',
  },
  walletSendTokens: {
    noZeroAmount: 'S·ªë ti·ªÅn kh√¥ng th·ªÉ l√† 0',
    payDone:
      'Thanh to√°n ƒë∆∞·ª£c th·ª±c hi·ªán! Ki·ªÉm tra c√°c giao d·ªãch ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.',
    tryAgain: 'Vui l√≤ng th·ª≠ l·∫°i! L·ªói:',
    successTxn: 'ƒê√£ chuy·ªÉn th√†nh c√¥ng ƒë·∫øn',
    successNftTxn: 'ƒê√£ chuy·ªÉn th√†nh c√¥ng NFT sang',
    addRecp: 'Th√™m ng∆∞·ªùi nh·∫≠n',
    selectedAsset: 'N·ªôi dung ƒë√£ ch·ªçn',
    balance: 'S·ª± c√¢n b·∫±ng:',
    txnFee: 'Ph√≠ giao d·ªãch',
    next: 'K·∫ø ti·∫øp',
    send: 'G·ª≠i',
    max: 't·ªëi ƒëa',
    amount: 'S·ªë l∆∞·ª£ng',
    amountPlace: 'l√™n ƒë·∫øn 8 ch·ªØ s·ªë th·∫≠p ph√¢n',
    inSuf: 'Thi·∫øu c√¢n b·∫±ng.',
    noZero: 'S·ªë ti·ªÅn kh√¥ng th·ªÉ b·∫±ng kh√¥ng.',
    noEmpty: 'Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng s·ªë ti·ªÅn.',
    total: 'T·ªïng c·ªông',
    noZeroWith: 'S·ªë ti·ªÅn kh√¥ng th·ªÉ b·∫±ng kh√¥ng. Ph√≠ giao d·ªãch l√†',
  },
  walletReceiveTokens: {
    header: 'Nh·∫≠n ƒë∆∞·ª£c',
    tooltip: 'Chia s·∫ª id duy nh·∫•t n√†y ƒë·ªÉ nh·∫≠n',
    pubAddr: 'ƒê·ªãa ch·ªâ c√¥ng c·ªông',
    cta: 'Xu·∫•t t√†i kho·∫£n',
    princTooltip:
      'V·ªõi ID ch√≠nh, b·∫°n c√≥ th·ªÉ t·∫°o c√°c h·ªôp v√† x√°c th·ª±c ch√≠nh m√¨nh tr√™n c√°c ·ª©ng d·ª•ng & Internet M√°y t√≠nh. d·ªãch v·ª•.',
    princLabel: 'Id ch√≠nh c·ªßa b·∫°n',
  },
  addNetwork: {
    header: 'Th√™m m·ªôt m·∫°ng',
    selectNet: 'Ch·ªçn m·∫°ng',
    cta: 'C·∫≠p nh·∫≠t',
  },
  selectTokens: {
    tokensListed: 'M√£ th√¥ng b√°o ƒë∆∞·ª£c li·ªát k√™',
    cta: 'C·∫≠p nh·∫≠t',
    header: 'Ch·ªçn m√£ th√¥ng b√°o',
  },
  nftList: {
    noNFTs: 'Kh√¥ng t√¨m th·∫•y NFT n√†o',
    free: 'Mi·ªÖn ph√≠',
    claimed: 'Y√™u c·∫ßu b·ªìi th∆∞·ªùng',
    explore: 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p',
    forSale: 'Rao b√°n',
    unlisted: 'ch∆∞a ni√™m y·∫øt',
  },
  listNFT: {
    cancel: 'H·ªßy b√°n c√¥ng khai',
    updatePrice: 'C·∫≠p nh·∫≠t gi√° ch√†o b√°n c√¥ng khai',
    listNFT: 'Ni√™m y·∫øt NFT ƒë·ªÉ b√°n c√¥ng khai',
    updateBtn: 'C·∫≠p nh·∫≠t gi√°',
    listBtn: 'Danh s√°ch B√°n c√¥ng khai',
    info: 'Nh·∫≠p gi√° t·ªëi ƒëa 8 ch·ªØ s·ªë th·∫≠p ph√¢n ƒë·ªÉ b√°n c√¥ng khai. Ni√™m y·∫øt mi·ªÖn ph√≠ v√† ƒë∆∞·ª£c b√°n b·∫±ng NFT, 2,0% s·ªë ti·ªÅn s·∫Ω ƒë∆∞·ª£c kh·∫•u tr·ª´ v√†o 1,0% ph√≠ b·∫£n quy·ªÅn c·ªßa Ng∆∞·ªùi s√°ng t·∫°o v√† 1% ph√≠ Th·ªã tr∆∞·ªùng m·∫°ng',
    cancelInfo:
      'H·ªßy ni√™m y·∫øt l√† mi·ªÖn ph√≠ v√† s·∫Ω h·ªßy ni√™m y·∫øt NFT c·ªßa b·∫°n kh·ªèi b√°n c√¥ng khai.',
    placeholder: 'gi√° ƒë·∫øn 8 ch·ªØ s·ªë th·∫≠p ph√¢n',
  },
  nftDetails: {
    transfer: 'Chuy·ªÉn kho·∫£n',
    cancel: 'H·ªßy b·ªè',
    listed: 'ni√™m y·∫øt ƒë·ªÉ b√°n',
    unlisted: 'ch∆∞a ni√™m y·∫øt',
  },
  nftAirdropDetails: {
    listed: 'ni√™m y·∫øt ƒë·ªÉ b√°n',
    airdrop: 'th·∫£ d√π',
    free: 'Mi·ªÖn ph√≠',
    claimed: 'Y√™u c·∫ßu b·ªìi th∆∞·ªùng',
  },
  createNFT: {
    txns: 'giao d·ªãch',
  },
  walletSettings: {
    header: 'C√†i ƒë·∫∑t t√†i kho·∫£n',
    web3: 'Nh√† cung c·∫•p Web3 m·∫∑c ƒë·ªãnh',
    checkbox:
      'S·ª≠ d·ª•ng Commune Wallet l√†m nh√† cung c·∫•p v√≠ Web3 m·∫∑c ƒë·ªãnh c·ªßa b·∫°n',
    connectDapps: 'Dapps ƒë∆∞·ª£c k·∫øt n·ªëi',
    language: 'Ng√¥n ng·ªØ',
    trustedDapps: 'Dapp ƒë√°ng tin c·∫≠y',
  },
  dappDetails: {
    dappOrigin: 'Ngu·ªìn g·ªëc Dapp',
    connectAddr: 'ƒê·ªãa ch·ªâ ƒë∆∞·ª£c k·∫øt n·ªëi',
    dappReqs: 'Y√™u c·∫ßu Dapp -',
    reqId: 'Y√™u c·∫ßu ID',
    completedOn: 'ho√†n th√†nh v√†o',
    reqType: 'Lo·∫°i y√™u c·∫ßu',
    batchReq: 'Y√™u c·∫ßu h√†ng lo·∫°t',
    response: 'Ph·∫£n ·ª©ng',
  },
  stake: {
    cta: 'Th√™m c·ªï ph·∫ßn v√†o qu·ªπ thanh kho·∫£n',
    add: 'Th√™m v√†o',
    stake: 'ti·ªÅn c∆∞·ª£c',
    fees: 'Ph√≠ LP',
    price: 'Gi√°',
    complete: 'C·ªï ph·∫ßn ho√†n t·∫•t! C·∫≠p nh·∫≠t s·ªë d∆∞',
    done: 'Xong!',
    selectSecond: 'Ch·ªçn m√£ th√¥ng b√°o th·ª© hai!',
  },
  stakeEth: {
    header: 'ƒë·∫∑t c∆∞·ª£c ETH',
    stake: 'C·ªï ph·∫ßn',
    unstake: 'h·ªßy b·ªè c·ªï ph·∫ßn',
    claimRewards: 'Y√™u c·∫ßu ph·∫ßn th∆∞·ªüng',
    yourStake: 'C·ªï ph·∫ßn c·ªßa b·∫°n',
    stakingRewards: 'Ph·∫ßn th∆∞·ªüng ƒë·∫∑t c∆∞·ª£c',
    total: 'T·ªïng s·ªë ti·ªÅn ƒë·∫∑t c∆∞·ª£c',
    validatorFee: 'Ph√≠ x√°c th·ª±c',
    max: 't·ªëi ƒëa',
    info: 'M·∫°ng Ethereum th∆∞·ªüng cho nh·ªØng ng∆∞·ªùi ƒë·∫∑t c∆∞·ª£c v√¨ ƒë√£ gi√∫p b·∫£o m·∫≠t chu·ªói kh·ªëi. B·∫±ng c√°ch ƒë·∫∑t c∆∞·ª£c ETH, b·∫°n c√≥ th·ªÉ ki·∫øm ƒë∆∞·ª£c t·ªõi 5% r·ªßi ro APY t·ª´ v√≠ t·ª± l∆∞u k√Ω c·ªßa m√¨nh.',
  },
  stakeEthConfirm: {
    stake: 'C·ªï ph·∫ßn',
    unstake: 'h·ªßy b·ªè c·ªï ph·∫ßn',
    cancel: 'H·ªßy b·ªè',
    txnComplete: 'Ho√†n t·∫•t giao d·ªãch!',
    estGas: 'Ph√≠ gas ∆∞·ªõc t√≠nh',
    total: 'T·ªïng c·ªông',
    stakeSucc: 'Y√™u c·∫ßu c·ªï ph·∫ßn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!',
    unstakeSucc: 'ƒê√£ g·ª≠i th√†nh c√¥ng y√™u c·∫ßu h·ªßy ƒë·∫∑t c∆∞·ª£c!',
  },
  swap: {
    info: 'Commune DEX cho ph√©p b·∫°n trao ƒë·ªïi m√£ th√¥ng b√°o c·ªßa m√¨nh m√† kh√¥ng c·∫ßn ng∆∞·ªùi trung gian trung t√¢m. L·ªá ph√≠ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ b√π ƒë·∫Øp l∆∞·ª£ng kh√≠ th·∫£i.',
    mintFees: 'Ph√≠ ƒë√∫c ti·ªÅn',
    swapFees: 'Ph√≠ ho√°n ƒë·ªïi',
    price: 'Gi√°',
    totalSupply: 'T·ªïng cung',
    inSuf: 'Thi·∫øu c√¢n b·∫±ng',
    next: 'K·∫ø ti·∫øp',
    swap: 'Tr√°o ƒë·ªïi',
    stakeCompl: 'C·ªï ph·∫ßn ho√†n t·∫•t! C·∫≠p nh·∫≠t s·ªë d∆∞',
    selectSec: 'Ch·ªçn m√£ th√¥ng b√°o th·ª© hai!',
    done: 'Xong!',
  },
  tokenDetailsWithInfo: {
    mint: 'c√¢y b·∫°c h√†',
    recv: 'Nh·∫≠n ƒë∆∞·ª£c',
    send: 'G·ª≠i',
    stake: 'C·ªï ph·∫ßn',
    marketCap: 'V·ªën h√≥a th·ªã tr∆∞·ªùng',
    vol: '√Çm l∆∞·ª£ng 24h',
    maxSupply: 'Ngu·ªìn cung t·ªëi ƒëa',
    yourStake: 'C·ªï ph·∫ßn c·ªßa b·∫°n',
    stakeRewards: 'Ph·∫ßn th∆∞·ªüng ƒë·∫∑t c∆∞·ª£c',
  },
  tokenDetails: {
    select: 'Ch·ªçn m√£ th√¥ng b√°o',
    totalBalance: 'T·ªïng s·ªë d∆∞',
    tokens: 'm√£ th√¥ng b√°o',
    nfts: 'NFT',
    apps: '·ª©ng d·ª•ng',
    rec: 'Nh·∫≠n ƒë∆∞·ª£c',
    send: 'G·ª≠i',
    export: 'Xu·∫•t kh·∫©u',
  },
  common: {
    passwordForAc: 'm·∫≠t kh·∫©u cho t√†i kho·∫£n n√†y',
    requiredPlaceholder: 'Y√äU C·∫¶U',
    wrongPass: 'Sai m·∫≠t kh·∫©u! Vui l√≤ng th·ª≠ l·∫°i',
  },
};

export default vi;
